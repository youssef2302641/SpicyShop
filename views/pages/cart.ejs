<main>
    <section class="section cart">
        <div class="container">
            <h2 class="h2 section-title">Shopping Cart</h2>

            <% if (cart && cart.length > 0) { %>
                <div class="cart-container">
                    <div class="cart-items">
                        <% cart.forEach(item => { %>
                            <div class="cart-item" data-id="<%= item.productId %>" data-size="<%= item.size %>">
                                <div class="item-details">
                                    <h3 class="item-name"><%= item.name %></h3>
                                    <div class="item-size">Size: <%= item.size %></div>
                                    <div class="item-price">$<%= item.price.toFixed(2) %></div>
                                </div>

                                <div class="item-quantity">
                                    <button class="quantity-btn minus" data-action="decrease">-</button>
                                    <input type="number" class="quantity-input" value="<%= item.quantity %>" min="1" max="10">
                                    <button class="quantity-btn plus" data-action="increase">+</button>
                                </div>

                                <div class="item-total">
                                    $<%= (item.price * item.quantity).toFixed(2) %>
                                </div>

                                <button class="remove-item" data-action="remove">
                                    <ion-icon name="trash-outline"></ion-icon>
                                </button>
                            </div>
                        <% }); %>
                    </div>

                    <div class="cart-summary">
                        <h3 class="summary-title">Order Summary</h3>
                        <div class="summary-item">
                            <span>Subtotal</span>
                            <span>$<%= total.toFixed(2) %></span>
                        </div>
                        <div class="summary-item">
                            <span>Shipping</span>
                            <span>Free</span>
                        </div>
                        <div class="summary-item total">
                            <span>Total</span>
                            <span>$<%= total.toFixed(2) %></span>
                        </div>
                        <button class="btn btn-primary checkout-btn">
                            Proceed to Checkout
                        </button>
                    </div>
                </div>
            <% } else { %>
                <div class="empty-cart">
                    <ion-icon name="cart-outline" class="empty-cart-icon"></ion-icon>
                    <h3>Your cart is empty</h3>
                    <p>Looks like you haven't added any items to your cart yet.</p>
                    <a href="/shop" class="btn btn-primary">Continue Shopping</a>
                </div>
            <% } %>
        </div>
    </section>
</main>

<style>
    .cart {
        padding: 2rem 0;
    }

    .cart-items {
        margin-bottom: 2rem;
    }

    .cart-item {
        display: flex;
        align-items: center;
        padding: 1rem;
        border-bottom: 1px solid #eee;
        gap: 1rem;
    }

    .cart-item-img {
        width: 100px;
        height: 100px;
        object-fit: cover;
    }

    .cart-item-details {
        flex: 1;
    }

    .quantity-controls {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 0.5rem;
    }

    .quantity-btn {
        padding: 0.25rem 0.5rem;
        border: 1px solid #ddd;
        background: #f8f8f8;
        cursor: pointer;
    }

    .quantity-input {
        width: 50px;
        text-align: center;
        padding: 0.25rem;
    }

    .remove-btn {
        padding: 0.5rem 1rem;
        background: #ff4444;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .cart-summary {
        background: #f8f8f8;
        padding: 1.5rem;
        border-radius: 8px;
    }

    .summary-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 1rem;
    }

    .summary-item.total {
        font-weight: bold;
        font-size: 1.2rem;
        border-top: 1px solid #ddd;
        padding-top: 1rem;
        margin-top: 1rem;
    }

    .checkout-btn {
        width: 100%;
        margin-top: 1rem;
    }

    .empty-cart {
        text-align: center;
        padding: 3rem 0;
    }

    .empty-cart p {
        margin-bottom: 1rem;
        font-size: 1.2rem;
    }

    .item-size {
        color: #666;
        font-size: 0.9em;
        margin: 5px 0;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Cart page DOMContentLoaded fired.');

        // Quantity buttons
        document.querySelectorAll('.quantity-btn').forEach(button => {
            button.addEventListener('click', async function() {
                const item = this.closest('.cart-item');
                const input = item.querySelector('.quantity-input');
                const currentValue = parseInt(input.value);
                
                if (this.dataset.action === 'increase' && currentValue < 10) {
                    input.value = currentValue + 1;
                } else if (this.dataset.action === 'decrease' && currentValue > 1) {
                    input.value = currentValue - 1;
                }
                
                await updateCartItem(item.dataset.id, input.value, item.dataset.size);
            });
        });

        // Remove item
        document.querySelectorAll('.remove-item').forEach(button => {
            button.addEventListener('click', async function() {
                const item = this.closest('.cart-item');
                await removeCartItem(item.dataset.id, item.dataset.size);
                item.remove();
                updateCartTotal();
            });
        });

        // Update cart item
        async function updateCartItem(productId, quantity, size) {
            try {
                const response = await fetch('/cart/update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId, quantity, size }),
                });
                const data = await response.json();
                if (data.success) {
                    updateCartTotal();
                }
            } catch (error) {
                console.error('Error updating cart:', error);
            }
        }

        // Remove cart item
        async function removeCartItem(productId, size) {
            try {
                const response = await fetch('/cart/remove', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId, size }),
                });
                const data = await response.json();
                if (data.success) {
                    updateCartTotal();
                }
            } catch (error) {
                console.error('Error removing item:', error);
            }
        }

        // Update cart total
        function updateCartTotal() {
            const items = document.querySelectorAll('.cart-item');
            let total = 0;
            
            items.forEach(item => {
                const price = parseFloat(item.querySelector('.item-price').textContent.replace('$', ''));
                const quantity = parseInt(item.querySelector('.quantity-input').value);
                total += price * quantity;
            });
            
            document.querySelector('.summary-item.total span:last-child').textContent = `$${total.toFixed(2)}`;
        }

        // Proceed to Checkout button
        const checkoutButton = document.querySelector('.checkout-btn');
        if (checkoutButton) {
            console.log('Checkout button found.');
            checkoutButton.addEventListener('click', function() {
                console.log('Proceed to Checkout button clicked!');
                window.location.href = '/checkout'; // Redirect to the checkout page
            });
        } else {
            console.error('Checkout button not found.');
        }
    });
</script>